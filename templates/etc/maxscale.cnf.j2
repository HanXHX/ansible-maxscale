#
# {{ ansible_managed }}
#

[maxscale]
threads={{ maxscale_threads }}
log_notice={{ maxscale_log_notice }}
log_info={{ maxscale_log_info }}
log_debug={{ maxscale_log_debug }}
logdir={{ maxscale_logdir }}
cachedir={{ maxscale_cachedir }}
piddir={{ maxscale_piddir }}

[qla]
type=filter
module=qlafilter
options=/tmp/QueryLog

[fetch]
type=filter
module=regexfilter
match=fetch
replace=select

[hint]
type=filter
module=hintfilter

# --------------------------------------------------------------------------
# Services
# --------------------------------------------------------------------------
{% for name, config in maxscale_services.iteritems() %}
[{{ name }} Service]
type=service
{% for key, value in config.iteritems() %}
{{ key }}={{ value }}
{% endfor %}

{% endfor %}
# --------------------------------------------------------------------------

# --------------------------------------------------------------------------
# Monitors
# --------------------------------------------------------------------------
{% for name, config in maxscale_monitors.iteritems() %}
[{{ name }} Monitor]
type=monitor
{% for key, value in config.iteritems() %}
{{ key }}={{ value }}
{% endfor %}

{% endfor %}
# --------------------------------------------------------------------------

# --------------------------------------------------------------------------
# Listeners
# --------------------------------------------------------------------------
{% for name, config in maxscale_listeners.iteritems() %}
[{{ name }} Listener]
type=listener
protocol=MySQLClient
service={{ config.service }}
{% if config.address is defined %}
address={{ config.address }}
{% endif %}
{% if config.port is defined %}
port={{ config.port }}
{% endif %}
{% if config.socket is defined %}
socket={{ config.socket }}
{% endif %}

{% endfor %}
# --------------------------------------------------------------------------

# --------------------------------------------------------------------------
# Servers
# --------------------------------------------------------------------------
{% for server in maxscale_servers %}
[{{ server.name }}]
type=server
address={{ server.address }}
port={{ server.port | default('3306') }}
protocol=MySQLBackend

{% endfor %}

{% if maxscale_debug_listener %}
# --------------------------------------------------------------------------
# Debug
# --------------------------------------------------------------------------
[Debug Listener]
type=listener
service=Debug Interface
protocol=telnetd
{% if maxscale_debug_listener_port is not none %}
port={{ maxscale_debug_listener_port }}
{% endif %}
{% if maxscale_debug_listener_address is not none %}
address={{ maxscale_debug_listener_address }}
{% endif %}
{% if maxscale_debug_listener_socket is not none %}
socket={{ maxscale_debug_listener_socket }}
{% endif %}
[Debug Interface]
type=service
router=debugcli
# --------------------------------------------------------------------------
{% endif %}

{% if maxscale_cli_listener %}
# --------------------------------------------------------------------------
# CLI
# --------------------------------------------------------------------------
[CLI Listener]
type=listener
service=CLI
protocol=maxscaled
{% if maxscale_cli_listener_port is not none %}
port={{ maxscale_cli_listener_port }}
{% endif %}
{% if maxscale_cli_listener_address is not none %}
address={{ maxscale_cli_listener_address }}
{% endif %}
{% if maxscale_cli_listener_socket is not none %}
socket={{ maxscale_cli_listener_socket }}
{% endif %}
[CLI]
type=service
router=cli
# --------------------------------------------------------------------------
{% endif %}


# vim: set ft=dosini :
